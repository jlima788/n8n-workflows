{
  "createdAt": "2025-07-25T16:57:39.510Z",
  "updatedAt": "2025-07-25T17:25:57.075Z",
  "id": "bNIASAjXchlWj6o5",
  "name": "Negócio de Agente IA",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "307653c1-36c0-4914-a793-a5d4baa60435",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2784,
        2848
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "ff52e5d9-812e-4acc-b1c3-f70144c10cf3",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2224,
        2912
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Agente IA",
        "height": 80,
        "width": 196,
        "color": 5
      },
      "id": "c37a5b02-b976-4810-b2cf-1a2f636a3871",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3072,
        2464
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "75cb7ea8-0957-471c-8436-303328642718",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2400,
        2864
      ],
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3040,
        2448
      ],
      "typeVersion": 1,
      "id": "c98d69ad-7954-493d-b1a1-98b4538baa7a",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "id": "47288b32-9218-4992-857d-4eab6a97a598",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4032,
        2928
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3e3dab4e-3895-4442-be40-156c9029d52a",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4624,
        2752
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "48f88b5c-e574-4757-93e1-93440ce3e588",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        4240,
        2928
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "={\n  \"messages\": [\n    \"Por favor, gere a saída no seguinte formato JSON: {\\\"messages\\\": [\\\"splitedMessage\\\", \\\"splitedMessage\\\", \\\"splitedMessage\\\"]}\",\n    \"As mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano. Certifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\",\n    \"Jamais separe uma mensagem vazia. Cada mensagem deve ter entre 300 e 500 caracteres, sem cortar informações, pois é uma conversa de chat.\",\n    \"Certifique-se de que a resposta siga exatamente essa estrutura: *negrito* (substitua '**' por '*') não made nada em negrito remova todos '*'; ~tachado~ (caso seja algo excluído/alterado); _itálico_ (extremamente raro).\",\n    \"Tudo o que for link, pode colocar entre \\\"`\\\", ou seja, na seguinte formatação: `www.link.com.br`. Use sempre essa formatação para todos os links.\",\n\"troque essas palavra: Prazer por: feliz em conhecer\"\n  ]\n}"
            }
          ]
        }
      },
      "id": "6d5ea881-dd21-4049-af3d-e46e5399f90f",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        4048,
        2720
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 1380,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3904,
        2448
      ],
      "typeVersion": 1,
      "id": "dc3eee8f-d161-4dcc-9bb0-fd06acffebdb",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "9be4787d-c670-471b-8ebf-1c7c7b338ace",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3920,
        2464
      ]
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3104,
        2832
      ],
      "id": "b2eb2ab0-6151-433d-a6c8-832aa41dba74",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Mensagem Completa').item.json.mensagem_completa }}",
        "options": {
          "systemMessage": "=TREINAMENTO DA IA AQUI"
        }
      },
      "id": "a1d60656-ae92-465a-854a-791b82ea6501",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        3184,
        2624
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Dados').item.json.Telefone }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3248,
        2800
      ],
      "id": "587ac44b-f933-4c05-89a9-be8160cc69e1",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "251213",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "2aa763f7-cf04-44e7-9bbb-8f8de823aef8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Continuar na IA"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "820760d6-3546-4007-8917-55d366a74261",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "251213",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Avisar Lead grupo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3632,
        2704
      ],
      "id": "f60353eb-f36c-4370-9e84-66df733e7596",
      "name": "Switch2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4704,
        3392
      ],
      "id": "201a7c00-b68c-461b-b08a-df19f974ee9d",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 400,
        "width": 1620,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3904,
        3104
      ],
      "typeVersion": 1,
      "id": "50536a29-cf56-41c7-ab93-d0acafe11542",
      "name": "Sticky Note44"
    },
    {
      "parameters": {
        "content": "# AVISAR NOVO LEAD NO GRUPO",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "3919526f-6da3-4c0c-9301-a9953a7a61b0",
      "name": "Sticky Note45",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3920,
        3120
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4624,
        2192
      ],
      "id": "ea48f5d0-3e50-43b0-b824-2eb1fcef9808",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "defac08a-6745-422b-bb05-90da9f47d91b",
              "leftValue": "={{ $('Busca Telefone').last().json.values() }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4128,
        2192
      ],
      "id": "c1f20a5a-4ade-43fb-88f5-877e9168b953",
      "name": "If4"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 1380,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3904,
        2048
      ],
      "typeVersion": 1,
      "id": "98149042-e6ae-4da7-8248-39e02cd67052",
      "name": "Sticky Note54"
    },
    {
      "parameters": {
        "content": "# Cadastra Chat Supabase",
        "height": 80,
        "width": 450,
        "color": 5
      },
      "id": "d8661255-c734-46e8-981d-fc7eb1a5c7fc",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3920,
        2064
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3968,
        2192
      ],
      "id": "7e880306-0e88-4c2a-b741-a6f14a0971f1",
      "name": "Busca Telefone",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "chats",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Dados').item.json.Telefone }}"
            },
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now}}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now}}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4400,
        2080
      ],
      "id": "8731b0eb-f01d-429e-8f1a-1e317f1cf7f8",
      "name": "Adiciona CHAT supabase",
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4432,
        2272
      ],
      "id": "ec4e9953-eb8a-4c5a-b169-54ef078f68b1",
      "name": "Atualiza CHAT Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Dados').item.json.Telefone }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $('Atendente').item.json.output }}"
            },
            {
              "fieldId": "user_message",
              "fieldValue": "={{ $('Dados').item.json.message.content }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Dados').item.json.body.event }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "nomewpp",
              "fieldValue": "={{ $('Dados').item.json.NomeWpp }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4832,
        2192
      ],
      "id": "7dfc4cc3-befc-42ea-b6b4-6bfdedf482df",
      "name": "Cria Histórico Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "6aa75161-7247-40ef-9ae8-827120543bcf",
      "name": "Split de Mensagem",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4400,
        2752
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "720c00e9-751b-46b7-9fef-477f85fc53ba",
      "name": "1 segundo",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5120,
        2768
      ],
      "webhookId": "3d687a7e-268e-4399-bf51-77626e001509"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Dados').item.json.Telefone }}"
      },
      "id": "11f16445-2e2e-4401-84af-c70c6a2629c6",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5024,
        2192
      ],
      "credentials": {
        "redis": {
          "id": "4SiUoUBw22jNHEdt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "name": "buscar_documentos",
        "description": "Analise o documento se encontrar uma informação que seja relevante traga o texto dele como resposta sem alterações, caso não encontre devolva o resultado em branco sem nem um texto",
        "topK": 2
      },
      "id": "28813420-256b-4a3f-9b7e-b4db2c72b959",
      "name": "buscar_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        2544,
        2704
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4144,
        3232
      ],
      "id": "f3108224-6317-44a1-a0c4-f73372c7b683",
      "name": "ListMessages-Supabase2",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4352,
        3232
      ],
      "id": "33767214-1c18-4af3-a428-5763bb2267b3",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate2').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4528,
        3232
      ],
      "id": "69763b74-f2b7-401c-9afc-4fd18e687fe4",
      "name": "Code6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={\n  \"role\": \"Agente Resumidor de Casos\",\n  \"proposito\": \"Analisar conversas cliente-agente e criar resumos detalhados dos problemas\",\n  \"instrucoes\": {\n    \"tarefa_principal\": \"Extrair e resumir apenas os problemas do cliente a partir das conversas\",\n    \"formato\": \"Incluir data da sessão quando disponível\",\n    \"foco\": \"Apenas problemas do cliente, excluir respostas do agente\",\n    \"estilo\": \"Resumos detalhados, mas concisos\",\n    \"evitar\": \"Dicas de uso, informações extras ou explicações\",\n    \"Me de o resultado somente com o resumo sem caracteres especiais\"\n  },\n  \"formato_entrada\": {\n    \"conversa\": \"{{ $json.texto }}\"\n  },\n  \"formato_saida\": {\n    \"resumo\": \"Descrição concisa do problema com detalhes relevantes e curto\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        4720,
        3232
      ],
      "id": "ebe28e92-a1f3-4a49-a57b-f17baf68e7e3",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1760,
        2800
      ],
      "id": "cb6ef2e6-da41-4682-ab6b-1672863b1e2f",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1568,
        2752
      ],
      "id": "be9001fd-28d0-4d09-820c-a7ea785b8caf",
      "name": "If1"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nomewpp",
              "fieldValue": "={{ $('Dados').item.json.NomeWpp }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now}}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1376,
        2880
      ],
      "id": "4f74ce1f-6961-4937-8eff-2e4f74f01e49",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 980,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1184,
        2448
      ],
      "typeVersion": 1,
      "id": "f000e2b8-ecd3-4c2c-b2da-fa54232bd8bf",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 660,
        "width": 960,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        2400
      ],
      "typeVersion": 1,
      "id": "b55979a6-35cd-4033-908e-4b1cf2604226",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 740,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1808,
        2624
      ],
      "typeVersion": 1,
      "id": "a9bda8df-c061-483b-a5fa-2f8a34a887bb",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Cadastrar Lead Supa Base",
        "height": 80,
        "width": 596,
        "color": 4
      },
      "id": "6ad62f0e-f011-4108-ac53-fe7538e72e76",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1808,
        2640
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1120,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1040,
        2560
      ],
      "typeVersion": 1,
      "id": "fb145724-20e2-420a-8aed-54f41493552f",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        48,
        544
      ],
      "typeVersion": 1,
      "id": "d0247828-ea6f-4c1b-b88e-05da5ed7611b",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        848,
        144
      ],
      "typeVersion": 1,
      "id": "4aeabd3f-049c-411f-9343-8a496241fb82",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1088,
        544
      ],
      "typeVersion": 1,
      "id": "29a32f05-26e5-41f7-b1a2-08ba08bd865c",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "3e949337-89b9-4fcc-a461-45458213b840",
        "options": {}
      },
      "id": "70f4197f-2914-469e-983a-01df94a59740",
      "name": "Webhook EVO",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2400,
        2832
      ],
      "webhookId": "3e949337-89b9-4fcc-a461-45458213b840"
    },
    {
      "parameters": {
        "content": "# Pausar IA",
        "height": 80,
        "width": 216,
        "color": 4
      },
      "id": "3cab7d8c-f71c-43be-8c50-848d420932cd",
      "name": "Sticky Note41",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1040,
        2560
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  nomewpp text,\n  atendimento_ia text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        384,
        160
      ],
      "id": "5921b8ad-1abe-43d7-a8fc-e93ec697621a",
      "name": "Cria Tabela Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1440,
        160
      ],
      "id": "739e8dea-2aa5-48f7-94c1-802b7f2c67e5",
      "name": "Cria Tabela Documentos",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1152,
        560
      ],
      "id": "52eb60c3-7dbe-4e22-b962-395115f1a131",
      "name": "Deleta Conteúdo Documentos",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1104,
        144
      ],
      "typeVersion": 1,
      "id": "01902c64-34f2-4dd7-b221-3e7752b5396d",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1392,
        144
      ],
      "typeVersion": 1,
      "id": "fccc8db7-965c-4a04-b967-c3689f2ae06a",
      "name": "Sticky Note48"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        64,
        144
      ],
      "typeVersion": 1,
      "id": "7422408f-8345-4b70-8d1e-a3446903299c",
      "name": "Sticky Note49"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        592,
        144
      ],
      "typeVersion": 1,
      "id": "90a9cfc7-e544-4b81-9445-7a4a80851f76",
      "name": "Sticky Note50"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        544
      ],
      "typeVersion": 1,
      "id": "796b69e2-a5ba-4e3a-a48e-10c7803cfb05",
      "name": "Sticky Note56"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        320,
        144
      ],
      "typeVersion": 1,
      "id": "b518225a-1659-4f14-9476-45ab023c8966",
      "name": "Sticky Note57"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        112,
        560
      ],
      "id": "36056493-ee67-4f38-83f1-2e640206d022",
      "name": "Deleta Histórico",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1168,
        160
      ],
      "id": "01812c9d-bc4f-458a-8800-3ceaf60c7352",
      "name": "Cria função Busca em Vetor",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create extension vector;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        912,
        160
      ],
      "id": "63148fcf-dc05-4b96-9794-0175b578760e",
      "name": "Cria Extensão Vetor",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table chats (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  phone text,\n  updated_at text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        640,
        160
      ],
      "id": "73bcfc20-f25e-4dca-bc11-cd174af71b46",
      "name": "Cria Tabela Chats",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        832,
        544
      ],
      "typeVersion": 1,
      "id": "142fd43b-fccb-4624-be05-5c5d89856ca5",
      "name": "Sticky Note65"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chats",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        880,
        560
      ],
      "id": "0aab525e-6973-4f55-b18c-112e6344fd86",
      "name": "Deleta Conteúdo Chats",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        624,
        560
      ],
      "id": "bff51551-e8df-43dd-a5ab-b76f6e02e0e6",
      "name": "Deleta Conteúdo Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        304,
        544
      ],
      "typeVersion": 1,
      "id": "d10428ff-41a7-4474-9246-2cdae14c3456",
      "name": "Sticky Note66"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chat_messages",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        368,
        560
      ],
      "id": "d573599e-2ff6-4768-a8d6-1f0916aed569",
      "name": "Deleta Conteúdo Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE chat_messages (\n  id BIGSERIAL PRIMARY KEY,\n  created_at TIMESTAMPTZ, \n  phone TEXT,\n  nomewpp TEXT, \n  bot_message TEXT,\n  user_message TEXT, \n  message_type TEXT,\n  active BOOLEAN DEFAULT TRUE\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        128,
        160
      ],
      "id": "f7c1c26f-2bb0-46f2-8afd-5235e7d3344e",
      "name": "Cria Tabela Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2448,
        2624
      ],
      "typeVersion": 1,
      "id": "9f3bcfa9-b9d7-4bf0-ac90-1d0179663df1",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "content": "## WEBHOOK & ROTAS",
        "height": 80,
        "width": 276,
        "color": 4
      },
      "id": "b5a82bbb-0b6a-4baf-a7d8-5acc4ac8ce8d",
      "name": "Sticky Note67",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2416,
        2640
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "9f1f3c00-c77d-464b-8450-ea95ff2ce985",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        432,
        2912
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6f3fcb82-e24e-4532-bd07-806e3d8d505b",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        288,
        2912
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "136c9b80-c7f1-4de1-ab0c-1757a1c5f05d",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        768,
        2912
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $('Dados').item.json.message.content }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "6a5d285d-c90f-44a5-bb19-a7680084a3c2",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        928,
        2928
      ],
      "credentials": {
        "redis": {
          "id": "4SiUoUBw22jNHEdt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "bf5c1006-3ad6-4351-97e1-273294e84b11",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        928,
        2752
      ],
      "credentials": {
        "redis": {
          "id": "4SiUoUBw22jNHEdt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "bee0ef13-81e8-4a88-906b-5c0d393d827d",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        192,
        2672
      ]
    },
    {
      "parameters": {
        "content": "# Mensagem Picotada",
        "height": 80,
        "width": 396,
        "color": 4
      },
      "id": "80f1c2ee-8aa9-4565-a408-4c564bb22af0",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1184,
        2448
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analise a imagem e me traga um resumo simples e o mais curto possível do que ela é",
        "inputType": "base64",
        "options": {}
      },
      "id": "c801cbc4-d46c-4e19-8d48-77d929670ef2",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        592,
        2912
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0c7ac765-6a27-4105-b946-75d0dc4792e9",
      "name": "Compara Get Memory1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1824,
        2704
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $('Dados').item.json.message.content }}",
        "tail": true
      },
      "id": "687a224a-3227-4cbd-9dc8-fd8b276a6056",
      "name": "Text Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        928,
        2432
      ],
      "credentials": {
        "redis": {
          "id": "4SiUoUBw22jNHEdt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "id": "7a0b1a3d-35e4-4416-b8e7-2ffff7f208a4",
      "name": "Audio Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        928,
        2592
      ],
      "credentials": {
        "redis": {
          "id": "4SiUoUBw22jNHEdt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d6c36ce9-9118-4fa8-87d1-2ca64181841e",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1664,
        2704
      ]
    },
    {
      "parameters": {
        "amount": 40
      },
      "id": "fd132ca2-46ed-47ed-abb8-af8384bdb53a",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1360,
        2704
      ],
      "webhookId": "f6c81d17-1a7d-40c4-8617-deab7d16595e"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Dados').item.json.Telefone }}",
        "options": {}
      },
      "id": "ebec53d4-b7e2-4ce7-8b2d-dec3e09d53a3",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1232,
        2704
      ],
      "credentials": {
        "redis": {
          "id": "4SiUoUBw22jNHEdt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Dados').item.json.Telefone }}",
        "options": {}
      },
      "id": "23827fca-f6eb-4bf9-b2a8-8be4d568b8ae",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1520,
        2704
      ],
      "credentials": {
        "redis": {
          "id": "4SiUoUBw22jNHEdt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Dados').item.json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7c878f9b-2c93-4061-954a-a832153e7647"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $('Dados').item.json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "a5967cd9-5270-4ed8-83f5-40d4397ce74e",
      "name": "Switch6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1024,
        2848
      ]
    },
    {
      "parameters": {
        "content": "# Filtro de mensagem",
        "height": 80,
        "width": 356,
        "color": 4
      },
      "id": "454bcd4e-f5b8-4250-b520-71b2f87c6524",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        160,
        2400
      ]
    },
    {
      "parameters": {
        "jsCode": "const redis1 = JSON.parse($json.Redis1);\nconst redis2 = JSON.parse($json.Redis2);\n\nconst combinadoSemDuplicatas = Array.from(new Set([...redis1, ...redis2]));\n\nconst mensagem = combinadoSemDuplicatas.join(\" \");\n\nreturn [{ json: { mensagem_completa: mensagem } }];"
      },
      "id": "d3ab3e6b-23f1-4f3a-b9e4-e1e43b8dd2e3",
      "name": "Mensagem Completa",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2048,
        2688
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "56a92eb9-57eb-43ec-925e-41f10e522635",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        560,
        2704
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "642e4f19-36aa-471b-ad8e-ff2da00387bd",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        2704
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "9e535092-ea46-42c1-870d-602c8b035329",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        752,
        2704
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "506dc1ff-31dd-4418-bd3f-8a29d6fbc87f",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -1760,
        3584
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Agente treinamento RAG, ativação automática como o texto: TreinoIA1212:",
        "height": 840,
        "width": 2300,
        "color": 4
      },
      "id": "85f78041-f573-4145-b1ec-dfc8ccf4155b",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1808,
        3104
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use para buscar informações na planilha caso tenha um treinamento paricido devovlea o numeroo da rtoow para ela ser atualziada",
        "documentId": {
          "__rl": true,
          "value": "=",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "=",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        -1616,
        3632
      ],
      "id": "c9d0c157-cd5e-4c56-a679-ada1f6eb9643",
      "name": "Treinamento_feito",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "nfGoy3UranCgi3Hm",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "c79ac7c7-096c-4d4c-b7cd-9e1140f52134",
      "name": "Insert into Supabase Vectorstore1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        80,
        3408
      ],
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "separator": "/n",
        "chunkSize": 1200,
        "chunkOverlap": 200
      },
      "id": "e1a32856-f350-4bee-8a3b-e24d18959869",
      "name": "Character Text Splitter1",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        224,
        3808
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "include": "allFieldsExcept",
        "fieldsToExclude": "rew_number",
        "options": {}
      },
      "id": "0080651a-ca3e-4845-ba4c-adf7630b89e0",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -320,
        3408
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "c62b95cb-2442-40d2-956e-54ce7fde8e01",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -64,
        3648
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "Arquivo",
                "value": "={{ $('Download File1').item.json.name }}"
              }
            ]
          }
        }
      },
      "id": "9bd703bb-8808-4d7b-9892-3a303261f551",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        112,
        3648
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "fc5ec3b7-dcb8-4d77-9c70-7629e8812ed3",
      "name": "Download File1",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -976,
        3360
      ],
      "executeOnce": false,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "8MAiyh89YVmVxJ49",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "7919d939-6e89-4b59-b302-155184b70c5f",
      "name": "Extract from Excel2",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -480,
        3312
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook EVO').item.json.body.data.message.conversation || '' }}",
        "options": {
          "systemMessage": "={\n  \"name\": \"AgenteTreinamentoPlanilha\",\n  \"objectives\": [\n    \"Receber um texto e corrigi-lo\",\n    \"Verificar se já existe pergunta similar na planilha\",\n    \"Atualizar a planilha com a pergunta e a resposta corrigida\",\n    \"Caso peça para atualizar, não execute nem uma tool\"\n  ],\n  \"tools\": [\n    {\n      \"name\": \"Treinamento_feito\",\n      \"description\": \"Verifica se existe conteúdo similar antes de atualizar, caso exista deve ser removido ou substituído\"\n    },\n    {\n      \"name\": \"Atualizar_treinamento\",\n      \"description\": \"Cria ou atualiza linha na planilha com as colunas: Pergunta e Resposta\"\n    }\n  ],\n  \"general_rules\": [\n    \"Não mencionar a planilha ou as ferramentas na resposta ao usuário\",\n    \"Corrigir sempre o texto recebido antes de registrar no sistema\",\n    \"Seja preciso e consistente ao preencher as colunas pergunta e resposta\",\n    \"Gere sua resposta sem acentos nas palavras ou caracteres especiais\"\n  ]\n}\n"
        }
      },
      "id": "61f3e022-a516-412a-b700-dc6b08c4a788",
      "name": "Agente Treinamento RAG",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -1760,
        3344
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "content": "# Ferramentas para criar\n\n",
        "height": 80,
        "width": 456,
        "color": 4
      },
      "id": "9734b08b-f861-4e80-b766-99e75089d527",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        64,
        48
      ]
    },
    {
      "parameters": {
        "content": "# Ferramentas para apagar\n\n",
        "height": 80,
        "width": 496,
        "color": 3
      },
      "id": "76d5b4a6-1879-49b0-988c-03e1c7fc838b",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        32,
        448
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5922557b-71e7-4390-af21-10b683e7a875",
                    "leftValue": "={{ $json.Telefone }}",
                    "rightValue": "553173374875@s.whatsapp.net",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Numero pessoal"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9865cb5b-33da-490c-afc3-186457d5b564",
                    "operator": {
                      "type": "string",
                      "operation": "notStartsWith"
                    },
                    "leftValue": "={{ $json.message.content }}",
                    "rightValue": "TreinoIA1212:"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Rota normal"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5a9a1fee-b408-469f-a08c-e8d690fc9792",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    },
                    "leftValue": "={{ $json.message.content }}",
                    "rightValue": "TreinoIA1212:"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Treinamento IA"
            }
          ]
        },
        "options": {}
      },
      "id": "0c14a8f6-59fa-4f0f-a748-39db881dba68",
      "name": "Rotas",
      "type": "n8n-nodes-base.switch",
      "position": [
        -2016,
        2832
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "atendimento_ia",
              "fieldValue": "pause"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -688,
        2608
      ],
      "id": "7697d613-796a-4183-a84c-407716c92812",
      "name": "Pausar IA",
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -688,
        2928
      ],
      "id": "dd4efb0e-06a1-4f20-b335-cf650a9eb7bd",
      "name": "Verificar Pause",
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.atendimento_ia }}",
                    "rightValue": "pause",
                    "operator": {
                      "type": "string",
                      "operation": "notStartsWith"
                    },
                    "id": "ff00573b-e517-43c6-8644-14a4fe8565d1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.atendimento_ia }}",
                    "rightValue": "pause",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia pausada"
            }
          ]
        },
        "options": {}
      },
      "id": "3cd996f3-8708-4e72-8137-8aa51f8294d9",
      "name": "Rota Atendimento",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -464,
        2928
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9865cb5b-33da-490c-afc3-186457d5b564",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "leftValue": "={{ $('Rotas').item.json.message.content }}",
                    "rightValue": "Atendimento finalizado"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA Pausada"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5a9a1fee-b408-469f-a08c-e8d690fc9792",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Rotas').item.json.message.content }}",
                    "rightValue": "Atendimento finalizado"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Reativar IA"
            }
          ]
        },
        "options": {}
      },
      "id": "578dd7fe-ed2c-4654-a8b6-cd238408ed2d",
      "name": "Rotas1",
      "type": "n8n-nodes-base.switch",
      "position": [
        -880,
        2752
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "atendimento_ia",
              "fieldValue": "reativada"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -496,
        2768
      ],
      "id": "29c6c771-2150-4b00-9941-fdd184084da7",
      "name": "Reativar IA",
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('Webhook EVO').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.audioMessage?.url || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "886e3751-e39b-4fc6-98d1-3113eaeebbb4",
              "name": "=body.event",
              "value": "={{ $('Webhook EVO').item.json.body.event }}",
              "type": "string"
            },
            {
              "id": "d04a0c6e-7842-41d2-bdb0-c0ce51d6dad7",
              "name": "Telefone",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "a57db642-3e13-452e-bb5b-19f7e9f3bd5d",
              "name": "NomeWpp",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c7ca5994-aac2-459f-b315-0befdd08ceb8",
      "name": "Dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2208,
        2832
      ]
    },
    {
      "parameters": {
        "amount": 3,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -688,
        2768
      ],
      "id": "34c3655e-9338-4465-88b5-ad4f72dae065",
      "name": "Wait",
      "webhookId": "fb57c068-92da-4e57-a6bd-c69c7c2de863"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $('Dados').item.json.Telefone }}",
            "message": "={\"type\": \"ai\", \"content\": \"{{ $('Rotas').item.json.message.content.replace(/\\n/g, ' ') }}\", \"additional_kwargs\": {}, \"response_metadata\": {}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -128,
        2880
      ],
      "id": "8c8fa808-a715-433d-9802-6b82bce36433",
      "name": "Salvar Historicoo Humano1",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2240,
        2720
      ],
      "id": "6f91354d-9e36-4046-923c-fc738a5be442",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "DJactF7wQNTfRMvR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem_completa }}",
        "options": {
          "systemMessage": "={\n  \"name\": \"AgenteRag\",\n  \"objectives\": [\n    \"Responder somente com dados obtidos da ferramenta buscar_documentos, sem dicas extras\"\n  ],\n  \"tools\": [\n    {\n      \"name\": \"buscar_documentos\",\n      \"description\": \"Use esta ferramenta para obter a resposta. Se não houver dados, retorne: não invente resposta somente do que vier da tool buscar_documentos'.\",\n      \"required\": true\n    }\n  ],\n  \"general_rules\": [\n    \"Não inventar respostas\",\n    \"Sempre usar a ferramenta buscar_documentos\",\n    \"caso não tenha uma resposta envie a resposta assim: sem dica de resposta\"\n  ]\n}\n"
        }
      },
      "id": "05164e39-c19e-499b-8568-bd0ed2c27e5f",
      "name": "Agente Rag",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2240,
        2544
      ]
    },
    {
      "parameters": {
        "content": "# Agente RAG",
        "height": 80,
        "width": 336,
        "color": 4
      },
      "id": "21eda566-c842-4f3f-b7a4-8e2d0a500588",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2208,
        2448
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 1680,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "525377a4-26d0-4940-ab19-3f2a2b58fdfa",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 1680,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        400
      ],
      "typeVersion": 1,
      "id": "49cc2b71-c20b-41d6-9a12-40884b4dfc2e",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2192,
        2448
      ],
      "typeVersion": 1,
      "id": "1c187141-39b6-4876-9599-a6fd16186fbe",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Analise se já existeuma coluca pareceida se sim atualize ela se não crie uma nova linha",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "=",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "=",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Pergunta": "={{ $fromAI(\"Pergunta\",\"isso é a pergunta\") }}",
            "Resposta": "={{ $fromAI(\"Resposta\",\"isso é a resposta\") }}"
          },
          "matchingColumns": [
            "Pergunta"
          ],
          "schema": [
            {
              "id": "Pergunta",
              "displayName": "Pergunta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Resposta",
              "displayName": "Resposta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "89290905-4748-472c-a328-ff6217c0ee85",
      "name": "Atualizar_treinamento",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        -1424,
        3632
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "nfGoy3UranCgi3Hm",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "3f470878-e296-4006-9c13-d0617745fc75",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -480,
        3648
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "fd8b4576-b897-4d20-b6a6-150ebe1b18df",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -480,
        3120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "d324b22b-cdf4-4216-a5ac-7db17ab11851"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "excel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8bd558b2-8c70-4edd-ab19-92540895ae46",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/vnd.google-apps.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CVS"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Google Docs"
            }
          ]
        },
        "options": {
          "fallbackOutput": 3
        }
      },
      "id": "e49e4ff0-2c49-4a24-9641-4083c1904c2b",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -800,
        3344
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "a8f45f3f-3518-451f-91a7-05a476a751a6",
      "name": "Summarize1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -128,
        3408
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "aaa9ec9e-f69b-478b-9795-484937e91a14",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -480,
        3488
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "neq",
              "keyValue": "0"
            }
          ]
        }
      },
      "id": "76d81520-0249-4954-a940-9053e2a04efe",
      "name": "Deleta linhas antigas do documento1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1344,
        3360
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1504,
        3184
      ],
      "id": "ff0fbde4-a4ff-42cc-9c37-ceb7540ee472",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $('Dados').item.json.Telefone }}",
            "message": "={\"type\": \"human\", \"content\": \"{{ $('Rotas').item.json.message.content.replace(/\\n/g, ' ') }}\", \"additional_kwargs\": {}, \"response_metadata\": {}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -176,
        2608
      ],
      "id": "69ee336e-59f9-4661-94fe-195db27ff584",
      "name": "Salvar Historicoo Humano",
      "credentials": {
        "postgres": {
          "id": "XbUJ8LhrsC3uRgfA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "atendimento_ia",
              "fieldValue": "pause"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5312,
        3232
      ],
      "id": "0a0a0dbc-49bc-4b36-a69b-c0d54e194291",
      "name": "Pausar IA1",
      "credentials": {
        "supabaseApi": {
          "id": "EJC32cBIZ8aidg1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1IoveRco9UkoOsk5LDoupkPkMuxi2TPej",
            "mode": "list",
            "cachedResultName": "D:FERNANDA ",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1IoveRco9UkoOsk5LDoupkPkMuxi2TPej"
          }
        },
        "options": {
          "fields": [
            "mimeType",
            "id",
            "name"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1168,
        3360
      ],
      "id": "02bdc28a-c91e-483e-8c15-7d753e1536f7",
      "name": "Search files and folders",
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "8MAiyh89YVmVxJ49",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "instanceName": "automacao-ia",
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4912,
        2768
      ],
      "id": "ca548f33-dea5-403f-9684-9562e36d7b93",
      "name": "Criar instancia",
      "credentials": {
        "evolutionApi": {
          "id": "yGbknPBGtQEGp57A",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "instanceName": "automacao-ia",
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3952,
        3232
      ],
      "id": "3257197f-dadd-464a-96c0-ef9337a3330c",
      "name": "Criar instancia1",
      "credentials": {
        "evolutionApi": {
          "id": "yGbknPBGtQEGp57A",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "instanceName": "automacao-ia",
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        5072,
        3232
      ],
      "id": "d5ca8e51-d456-4a6c-bbad-eb68b12c3a34",
      "name": "Criar instancia2",
      "credentials": {
        "evolutionApi": {
          "id": "yGbknPBGtQEGp57A",
          "name": "Evolution account"
        }
      }
    }
  ],
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Split de Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca Telefone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cria Histórico Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Adiciona CHAT supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza CHAT Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca Telefone": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona CHAT supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza CHAT Supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Cria Histórico Supabase": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar_documentos": {
      "ai_tool": [
        [
          {
            "node": "Agente Rag",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook EVO": {
      "main": [
        [
          {
            "node": "Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory1": {
      "main": [
        [
          {
            "node": "Mensagem Completa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Compara Get Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "Rotas1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Pause",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Completa": {
      "main": [
        [
          {
            "node": "Agente Rag",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Audio Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Treinamento RAG",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Treinamento_feito": {
      "ai_tool": [
        [
          {
            "node": "Agente Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Summarize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Download File1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel2": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rotas": {
      "main": [
        [],
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agente Treinamento RAG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pausar IA": {
      "main": [
        [
          {
            "node": "Salvar Historicoo Humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Pause": {
      "main": [
        [
          {
            "node": "Rota Atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rota Atendimento": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Salvar Historicoo Humano1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rotas1": {
      "main": [
        [
          {
            "node": "Pausar IA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reativar IA": {
      "main": [
        [
          {
            "node": "Salvar Historicoo Humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados": {
      "main": [
        [
          {
            "node": "Rotas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Reativar IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Rag",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agente Rag": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar_treinamento": {
      "ai_tool": [
        [
          {
            "node": "Agente Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize1": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta linhas antigas do documento1": {
      "main": [
        [
          {
            "node": "Search files and folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Deleta linhas antigas do documento1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search files and folders": {
      "main": [
        [
          {
            "node": "Download File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "d162c552-9438-4d39-be1a-86edf2e6d91a",
  "triggerCount": 0,
  "tags": []
}